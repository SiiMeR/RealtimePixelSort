// somewhat based on https://timseverien.com/posts/2017-08-17-sorting-pixels-with-webgl/

// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#include "../Shaders/PixelSortFunctions.cginc"

float uIteration;
float4 Resolution;

Texture2D<float4> Source;
RWTexture2D<float4> Result;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

    bool checkPrevious = fmod(id.x + uIteration, 2.0) < 1.0;
    float2 pixel = float2(-1.0, 0.0) / Resolution.xy;
    
    float4 current = Source[id.xy];
    float4 reference = Source[checkPrevious ? id.xy-pixel : id.xy + pixel];
    
    if (checkPrevious){
        if (compareColors(reference, current)){
            Result[id.xy] = reference;
            return;
        }
    } else {
        if (compareColors(current, reference)){
            Result[id.xy] = reference;
            return;
        }
    }
    Result[id.xy] = current;
}

